stages:
  - build
  - test
  - release

cache: &global_cache          # Default cache configuration with YAML variable
                              # `global_cache` pointing to this block
  key: "nyacc-rs"  # Share cache between all jobs on one branch/tag
  paths:                      # Paths to cache
    - .cargo/bin
    - .cargo/registry/index
    - .cargo/registry/cache
    - target/
  policy: pull-push           # All jobs not setup otherwise pull from
                              # and push to the cache

variables:
  CARGO_HOME: ${CI_PROJECT_DIR}/.cargo # Move cargo data into the project
                                       # directory so it can be cached

build:
  stage: build
  image: registry.git.foxido.dev/foxido/nyacc-rs/ci_image
  script:
    - cargo build

runtest:
  stage: test
  image: registry.git.foxido.dev/foxido/nyacc-rs/ci_image
  script:
    - cargo test -- -Z unstable-options --format json --report-time | cargo2junit > results.xml
  artifacts:
    reports:
      junit: results.xml

codestyle:
  stage: test
  image: registry.git.foxido.dev/foxido/nyacc-rs/ci_image
  script:
    - cargo fmt --check

valgrind:
  stage: test
  image: registry.git.foxido.dev/foxido/nyacc-rs/ci_image
  script:
    - cargo build
    - valgrind --error-exitcode=1 --leak-check=full --errors-for-leak-kinds=definite,possible ./target/debug/nyacc -i examples/valgrinded.nya jit 

build_release:
  stage: release
  image: registry.git.foxido.dev/foxido/nyacc-rs/ci_image
  only:
  - master
  script:
    - cargo build --release
  artifacts:
    paths:
      - target/release/nyacc